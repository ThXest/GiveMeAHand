function Profile() {
  const [image, setImage] = useState(null);
  const [links, setLinks] = useState(['no data']);
  const [image64, setImage64] = useState("");
  const [imageURL, setImageURL] = useState("");
  const [postNum, setPostNum] = useState(0);
  const [postName, setPostName] = useState("");
  const [postDownload, setPostDownload] = useState("");
  const user = auth.currentUser;
  const navigation = useNavigation();

  const pickImage = async () => {
    let result = await ImagePicker.launchImageLibraryAsync({
      mediaTypes: ImagePicker.MediaTypeOptions.All,
      allowsEditing: true,
      aspect: [1, 1],
      quality: 1,
      base64: true
    });
    if (!result.canceled) {
      setImage(result.assets[0].uri);
      setImage64(result.assets[0].base64);
    }
  }
  const findTotalPostNum = () => {
    const listRef = ref(storage, "/files/" + user?.uid);
    // Find all the prefixes and items.
    listAll(listRef)
      .then((res) => {
        /* res.prefixes.forEach((folderRef) => {

        }); */
        var totalNum = res.items.length;
        setPostNum(totalNum);
        var newArray = [];
        if (totalNum == 0) {
          newArray.push('no-data');
        }
        else {
          res.items.forEach((itemRef) => {
            newArray.push(itemRef.name);
          });
        }
        setLinks(newArray);
      }).catch((error) => {
        Alert.alert(error.code);
      });
  }

  useLayoutEffect(() => {
    findTotalPostNum();
  }, []);

  return (
    <View onLo>
      {/* <Text style={{ fontSize: 20 }}>{user?.email}</Text>
      <Button title='Open Gallery' onPress={pickImage} />
      <Button title="Upload" onPress={async () => {
        const reference = ref(storage, "/files/" + user?.uid + "/" + postName + ".txt");
        console.log(image64.length);
        uploadString(reference, image64, 'base64').then((snapshot) => {
          findTotalPostNum();
          Alert.alert('Uploaded!');
        }).catch((error) => {
          Alert.alert(error.code);
        });

      }} /> */}
      {/* <Button title='Download' onPress={async () => {
        getDownloadURL(ref(storage, "/files/" + user?.uid + "/" + postDownload + ".txt"))
          .then((url) => {
            const xhr = new XMLHttpRequest();
            xhr.responseType = 'text';
            xhr.onload = (event) => {
              const text = xhr.response;
              setImageURL(text);
            };
            xhr.open('GET', url);
            xhr.send();
            Alert.alert("Downloaded!");
          })
          .catch((error) => {
            Alert.alert(error.code);
          });
      }} /> */}
      <Feed />
      <CreatePost></CreatePost>
      <Button title='Sign Out' onPress={async () => {
        await auth.signOut().then(() => {
          Alert.alert("Signed out!");
          navigation.reset({ index: 0, routes: [{ name: 'Home' }] });
        });
      }} />
      {/* <Text style={{ fontSize: 20, marginTop: 10 }}>Total Post Num: {postNum} (Posts are stored in base64 string format)</Text>
      <FlatList data={links} renderItem={({ item }) => <Text>{item}</Text>} />
      <View>
        <Text style={{ fontSize: 20, marginTop: 10, textAlign: 'center' }}>Photo you will upload</Text>
        <TextInput onChangeText={setPostName} value={postName} placeholder='Give your post a name (do not specify mime type)' style={{ fontSize: 20, marginTop: 10, textAlign: 'center' }} />
      </View>

      <View style={{ width: '30%', height: '30%', marginHorizontal: '35%', borderColor: 'black', borderWidth: 3 }}>
        <Image src={`data:image/jpeg;base64,${image64}`} style={{ width: '100%', height: '100%' }} />
      </View>

      <View style={{ borderBottomColor: 'black', borderBottomWidth: 4, marginTop: 10 }}>

      </View>
      <View>
        <TextInput onChangeText={setPostDownload} value={postDownload} placeholder='Enter name of the post you want to download (do not specify mime type)' style={{ fontSize: 20, marginTop: 10, textAlign: 'center' }} />
        <Text style={{ fontSize: 20, marginTop: 10, textAlign: 'center' }}>Photo you downloaded</Text>
      </View>
      <View style={{ width: '30%', height: '30%', marginHorizontal: '35%', borderColor: 'black', borderWidth: 3 }}>
        <Image src={`data:image/jpeg;base64,${imageURL}`} style={{ width: '100%', height: '100%' }} />
      </View> */}

    </View>
  );
}